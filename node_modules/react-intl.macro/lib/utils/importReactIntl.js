"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.default = importReactIntl;

var R = _interopRequireWildcard(require("ramda"));

var _constants = require("./constants");

function importReactIntl(state, t, importName, calleeName) {
  var fileBodyReference = state.file.path.node && state.file.path.node.body || [];
  var importDeclaration = fileBodyReference.filter(function (node) {
    return t.isImportDeclaration(node);
  }).find(function (e) {
    return e.source.value === _constants.REACT_INTL;
  });

  if (R.isNil(importDeclaration)) {
    // Case 1: there is no 'react-intl' importDeclaration
    fileBodyReference.unshift(t.importDeclaration([t.importSpecifier(t.identifier(importName), t.identifier(calleeName))], t.stringLiteral(_constants.REACT_INTL)));
  } else {
    // Case 2: import { injectIntl } from 'react-intl';
    importDeclaration.specifiers.push(t.importSpecifier(t.identifier(calleeName), t.identifier(importName)));
  }
}

module.exports = exports.default;